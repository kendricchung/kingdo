{"ast":null,"code":"import _classCallCheck from\"/Users/kendric_chung/Projects/kingdo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kendric_chung/Projects/kingdo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kendric_chung/Projects/kingdo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kendric_chung/Projects/kingdo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import MenuItem from\"./MenuItem\";import List from\"@material-ui/core/List\";var MenuStructure=/*#__PURE__*/function(_Component){_inherits(MenuStructure,_Component);var _super=_createSuper(MenuStructure);function MenuStructure(props){var _this;_classCallCheck(this,MenuStructure);_this=_super.call(this,props);_this.state={sectionItems:[]};_this.formGrid=function(){// should do a map here and do some calculations based on the list of items\nreturn/*#__PURE__*/React.createElement(List,{style:{paddingLeft:\"2%\",paddingRight:\"2%\"}},_this.state.sectionItems.map(function(item){return/*#__PURE__*/React.createElement(MenuItem,{key:item.id,addMenuItemToCart:_this.props.addMenuItemToCart,itemInfo:item});}));};_this.state={sectionItems:props.items};return _this;}_createClass(MenuStructure,[{key:\"render\",value:function render(){return this.formGrid();}}]);return MenuStructure;}(Component);export default MenuStructure;","map":{"version":3,"sources":["/Users/kendric_chung/Projects/kingdo/src/Components/Menu/MenuStructure.js"],"names":["React","Component","MenuItem","List","MenuStructure","props","state","sectionItems","formGrid","paddingLeft","paddingRight","map","item","id","addMenuItemToCart","items"],"mappings":"4lBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,C,GAEMC,CAAAA,a,8GAKJ,uBAAYC,KAAZ,CAAmB,+CACjB,uBAAMA,KAAN,EADiB,MAJnBC,KAImB,CAJX,CACNC,YAAY,CAAE,EADR,CAIW,OAMnBC,QANmB,CAMR,UAAM,CACf;AACA,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,WAAW,CAAE,IAAf,CAAqBC,YAAY,CAAE,IAAnC,CAAb,EACG,MAAKJ,KAAL,CAAWC,YAAX,CAAwBI,GAAxB,CAA4B,SAACC,IAAD,qBAC3B,oBAAC,QAAD,EACE,GAAG,CAAEA,IAAI,CAACC,EADZ,CAEE,iBAAiB,CAAE,MAAKR,KAAL,CAAWS,iBAFhC,CAGE,QAAQ,CAAEF,IAHZ,EAD2B,EAA5B,CADH,CADF,CAWD,CAnBkB,CAEjB,MAAKN,KAAL,CAAa,CACXC,YAAY,CAAEF,KAAK,CAACU,KADT,CAAb,CAFiB,aAKlB,C,iEAgBQ,CACP,MAAO,MAAKP,QAAL,EAAP,CACD,C,2BA5ByBP,S,EA+B5B,cAAeG,CAAAA,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport MenuItem from \"./MenuItem\";\nimport List from \"@material-ui/core/List\";\n\nclass MenuStructure extends Component {\n  state = {\n    sectionItems: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionItems: props.items,\n    };\n  }\n  formGrid = () => {\n    // should do a map here and do some calculations based on the list of items\n    return (\n      <List style={{ paddingLeft: \"2%\", paddingRight: \"2%\" }}>\n        {this.state.sectionItems.map((item) => (\n          <MenuItem\n            key={item.id}\n            addMenuItemToCart={this.props.addMenuItemToCart}\n            itemInfo={item}\n          ></MenuItem>\n        ))}\n      </List>\n    );\n  };\n\n  render() {\n    return this.formGrid();\n  }\n}\n\nexport default MenuStructure;\n"]},"metadata":{},"sourceType":"module"}